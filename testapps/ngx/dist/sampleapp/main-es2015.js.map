{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from \"@polygloat/ngx\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private translateService: TranslateService) {\n\n  }\n\n  text1: string;\n\n  async ngOnInit(): Promise<void> {\n    this.translateService.get('sampleApp.this_is_translation_retrieved_by_service').subscribe(r => this.text1);\n  }\n\n  setLang(lang: string) {\n    this.translateService.setLang(lang);\n  }\n\n  params = {name: \"Honza\", surname: \"Cizmar\"};\n\n}\n","<button (click)=\"setLang('en')\">en</button>\n<button (click)=\"setLang('de')\">de</button>\n\n<h1>Angular sample app translation using polygloat JS</h1>\n\n<h2>Some basic translations</h2>\n<div>\n  {{ 'sampleApp.this_is_standard_text_somewhere_in_dom' | translate }}<br/>\n  {{ 'sampleApp.this_is_another_standard_text_somewhere_in_dom' | translate }}<br/>\n  {{ 'sampleApp.this_is_another_standard_text_somewhere_in_dom_with_param' | translate:params }}<br/>\n  {{ 'sampleApp.this_is_another_standard_text_somewhere_in_dom_with_param2' | translate:params }}\n</div>\n\n<h2>Service defined translation</h2>\n<div>{{text1}}</div>\n\n<h2>Advanced input translations</h2>\n\n<h3>Textarea with placeholder and value in inner HTML</h3>\n<label>\n  <textarea\n    placeholder=\"{{ 'sampleApp.this_is_textarea_with_placeholder_and_value' | translate:params }}\">\n{{ 'sampleApp.this_is_textarea_with_placeholder_and_value' | translate:params }}\n  </textarea>\n</label>\n\n<h3>Textarea with translated value in inner HTML</h3>\n\n<label>\n  <textarea>{{ 'sampleApp.this_is_textarea_with_placeholder_and_value' | translate }}</textarea>\n</label>\n\n<h3>Empty textarea with placeholder</h3>\n\n<label>\n  <textarea placeholder=\"{{ 'sampleApp.this_is_textarea_with_placeholder' | translate }}\"></textarea>\n</label>\n\n<h3>Input with initial value</h3>\n\n<input type=\"text\" value=\"{{ 'sampleApp.this_is_input_with_value' | stranslate }}\"/>\n\n<h3>Empty input with placeholder</h3>\n\n<input placeholder=\"{{ 'sampleApp.this_is_input_with_placeholder' | translate }}\" type=\"text\"/>\n\n<div>{{'sampleApp.new_translation' | translate }}</div>\n\n<div>{{'sampleApp.subfolder.subfolder.subfolder.new_translation' | translate }}</div>\n\n<div>{{'sampleApp.subfolder.subfolder.subfolder.subfolder.new_translation' | translate }}</div>\n\n<div>{{'sampleApp.subfolder.subfolder.new_translation' | translate }}</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NgxPolygloatModule} from \"@polygloat/ngx\";\nimport {UI} from \"@polygloat/ui\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgxPolygloatModule.forRoot({\n      apiUrl: \"http://localhost:8202\",\n      apiKey: \"this_is_dummy_api_key\",\n      ui: UI\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}